[["Map",1,2,9,10,32,33,98,99],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.5.5","content-config-digest","704b91e33458fd3b","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://z3moo.github.io\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"never\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":true,\"port\":1234,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":false},\"markdown\":{\"syntaxHighlight\":false,\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[null,null,null],\"rehypePlugins\":[[null,{\"target\":\"_blank\",\"rel\":[\"nofollow\",\"noreferrer\",\"noopener\"]}],null,null,null,[null,{\"theme\":{\"light\":\"github-light-high-contrast\",\"dark\":\"github-dark-high-contrast\"},\"transformers\":[{\"name\":\"@shikijs/transformers:notation-diff\"},{\"name\":\"@shikijs/transformers:meta-highlight\"},{\"name\":\"@rehype-pretty/transformers/copy-button\"}]}]],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false},\"legacy\":{\"collections\":false}}","authors",["Map",11,12],"echo",{"id":11,"data":13,"filePath":22,"digest":23,"rendered":24},{"name":14,"pronouns":15,"avatar":16,"bio":17,"mail":18,"website":19,"twitter":20,"github":21},"Emile","he/him","https://gravatar.com/userimage/260113357/1020d2005cd6291727de4bc34dc827ed.webp?size=256","(-_-)","echoghi@rennalabs.xyz","https://emile.sh","https://twitter.com/echoghi","https://github.com/echoghi","src/content/authors/echo.md","8c614aa1d866e2cc",{"html":25,"metadata":26},"",{"headings":27,"localImagePaths":28,"remoteImagePaths":29,"frontmatter":30,"imagePaths":31},[],[],[],{"name":14,"pronouns":15,"avatar":16,"bio":17,"website":19,"twitter":20,"github":21,"mail":18},[],"projects",["Map",34,35,56,57,77,78],"rennalabs",{"id":34,"data":36,"filePath":44,"assetImports":45,"digest":47,"rendered":48},{"name":37,"description":38,"tags":39,"image":42,"link":43},"Renna Labs","Renna Labs is a creative digital agency that designs and builds thoughtful digital experiences. We produce beautiful brands, websites and products for startups and tech companies.",[40,41],"Next.js","Tailwind","__ASTRO_IMAGE_../../../public/static/rennalabs.png","https://rennalabs.xyz","src/content/projects/rennalabs.md",[46],"../../../public/static/rennalabs.png","db71b9e29f274e72",{"html":25,"metadata":49},{"headings":50,"localImagePaths":51,"remoteImagePaths":52,"frontmatter":53,"imagePaths":55},[],[],[],{"name":37,"description":38,"tags":54,"image":46,"link":43},[40,41],[],"catcafemap",{"id":56,"data":58,"filePath":65,"assetImports":66,"digest":68,"rendered":69},{"name":59,"description":60,"tags":61,"image":63,"link":64},"Cat Cafe Map","Cat Cafe Map is the largest directory of cat cafes on the web. It features over 650 cat cafes in 50+ countries. Every month, hundreds of thousands of visitors across the globe use it to find cat cafes near them.",[62,41],"Astro","__ASTRO_IMAGE_../../../public/static/catcafemap.png","https://catcafemap.com","src/content/projects/catcafemap.md",[67],"../../../public/static/catcafemap.png","dbd084909f355b84",{"html":25,"metadata":70},{"headings":71,"localImagePaths":72,"remoteImagePaths":73,"frontmatter":74,"imagePaths":76},[],[],[],{"name":59,"description":60,"tags":75,"image":67,"link":64},[62,41],[],"gigfish",{"id":77,"data":79,"filePath":86,"assetImports":87,"digest":89,"rendered":90},{"name":80,"description":81,"tags":82,"image":84,"link":85},"GigFish","GigFish is a listing site for companies that offer gig work, side hustles, and contract jobs. Thousands of job seekers visit GigFish every day to find work they can do on their own schedule.",[40,41,83],"MongoDB","__ASTRO_IMAGE_../../../public/static/gigfish.png","https://gig.fish","src/content/projects/gigfish.md",[88],"../../../public/static/gigfish.png","93b85aaae469ddf3",{"html":25,"metadata":91},{"headings":92,"localImagePaths":93,"remoteImagePaths":94,"frontmatter":95,"imagePaths":97},[],[],[],{"name":80,"description":81,"tags":96,"image":88,"link":85},[40,41,83],[],"blog",["Map",100,101,116,117,131,132,145,146,159,160],"creativity-is-the-final-frontier",{"id":100,"data":102,"body":110,"filePath":111,"assetImports":112,"digest":114,"deferredRender":115},{"title":103,"description":104,"date":105,"image":106,"tags":107},"Creativity is the Final Frontier","The most valuable skill in the future will be having good taste.",["Date","2025-01-02T00:00:00.000Z"],"__ASTRO_IMAGE_./rick-rubin.png",[108,109],"opinion","AI","Talking heads and industry leaders once thought factory jobs and manual labor would be the first things to be automated and replaced by robots. They were _wrong_.\n\nAs LLMs have quickly evolved before our eyes these past couple years, they've gone from esoteric machine learning projects to useful products used across the world, every day.\nTools like [Midjourney](https://www.midjourney.com) can create highly detailed pieces of digital art in seconds, and the AI powering it gets meaningfully better every week. Technical writing, software engineering, healthcare diagnostics,\nand even music composition are all being automated at an alarming rate. White collar jobs are currently more at risk than blue collar jobs.\n\nAs an engineer, I find myself curating bits of code and data more than I actually write them. [GitHub Copilot](https://github.com/features/copilot) and [Cursor](https://www.cursor.com/) autocomplete my intentions before I even finish conceptualizing them.\nChatGPT steps in when the problem requires bigger picture thinking and multiple iterations. We are still in act one of the artificial intelligence revolution, and by act two, I'm not so sure my job will even exist anymore.\nI will have my own personal Jarvis to do the heavy lifting, and my only value as a human being will be my ability to reason and\ncurate the output of the machine.\n\nEven as I write this blog post in my Visual Studio Code IDE, Copilot frantically attempts to autocomplete my thoughts, albeit with mixed results. Its prose is formulaic, lacks personality, and produces some truly corny slop. Our value\nas human beings is not the knowledge we amass, or the algorithms we can write, but our ability to reason, think critically, and create something new when nothing like it existed before.\n\n_Artificial Intelligence_ (a clever marketing term for machine learning) is not a replacement for human creativity. It is a tool that can be used to augment our own creativity, and likely won't replace it. As Michio Kaku once called it, AI is a \"glorified tape recorder\".\nIt is a plagiarism engine that can convincingly stitch together pieces of existing work, but it cannot create something new.\n\n_For now_, at least.","src/content/blog/creativity-is-the-final-frontier/index.mdx",[113],"./rick-rubin.png","74640fc346c46676",true,"code-is-leverage",{"id":116,"data":118,"body":126,"filePath":127,"assetImports":128,"digest":130,"deferredRender":115},{"title":119,"description":120,"date":121,"image":122,"tags":123},"Code is Leverage","Software is the force multiplier that allows you to scale your willpower.",["Date","2024-12-30T00:00:00.000Z"],"__ASTRO_IMAGE_./code-is-leverage.png",[124,125],"code","career","What first drew me to programming was the novelty of creating something out of nothing. The idea that I could write a few lines of code and have it turn into a website as simply as you would stack legos as a kid. It felt like play.\n\nBut as I grew into my profession, I realized that the code is not the hard part. The hard part is deciding what to build, how to sell it, and who to market it to. The difficult part is building the business, not the programming.\n\nTo stay employed solely as a programmer, taking a salary dictated by office politics, an arbitrary title, or location is to trade your potential for a small slice of certainty. It’s a promise of safety without the possibility of non-linear outcomes — work that ends when you stop working.\n\nThe real gift of software is leverage. Code is a modern daemon, quietly compounding your effort without fatigue or complaint. It scales beyond your time and energy. You can build it once, and it can serve millions while you sleep. That’s where the real power of programming lies.\n\nThe problem with a traditional job is simple: it doesn’t scale. Your income is limited to the time you have available. Your hours become your ceiling. Without ownership, without equity, you are simply renting out your most limited resource.\n\nWorse still, you could code features at work that generate millions, but the spoils aren’t yours. The incentive is to do just enough to meet expectations, but not to exceed them. Why give your best when the upside belongs to someone else?\n\nThe real shift happens when you realize that leverage is no longer reserved for the elite. In the past, you needed capital, connections, or factories. Today, you only need a laptop and an internet connection. Code is permissionless leverage. No one needs to give you authority. You can simply build.\n\nThe toughest obstacle isn’t learning to code, it’s having the courage to use it for yourself. Most will choose the familiar path: salaries, titles, healthcare, \"unlimited\" PTO, and praise from bosses who own the real upside. But the few who step off that path and build for themselves unlock the possibility of asymmetric upside. They stop renting out time and start building equity in something that’s entirely theirs.\n\nIf you can code, you already hold the keys. The ability to create, automate, and scale is sitting in your hands. No one is stopping you. The only thing left is to act: to place the bet, to take the risk, to build something of your own.\n\n_**Bet on yourself**_.","src/content/blog/code-is-leverage/index.mdx",[129],"./code-is-leverage.png","ee1332b49e711a85","how-to-add-noise-to-element-css",{"id":131,"data":133,"body":140,"filePath":141,"assetImports":142,"digest":144,"deferredRender":115},{"title":134,"description":135,"date":136,"image":137,"tags":138},"How to Add a Noise Effect with CSS","Add \"noise\" to any element to produce a neat, grainy effect.",["Date","2025-03-20T00:00:00.000Z"],"__ASTRO_IMAGE_./noise-css-cover.webp",[124,139],"design","import { NoiseOverlay } from '../../../components/Noise'\n\nScrolling through X (Twitter) the other day, I came across a designer showing some landing page concepts he had made with Figma. They all featured this aesthetically pleasing, grainy effect that softened the sharpness of the images.\n\nThe basic concept was that he had prompted his way to creating these clean, high-definition image outputs from Midjourney, applied headings, buttons, and marketing copy, then finished it off with this \"noise\" effect. The result was an accessible approach to quickly designing landing page ideas that got him a few leads to his business without having to even create the actual site.\n\n![Noise Effect Tweet](kuba-noise-tweet.webp)\n\nUnfortunately, for design illiterate devs like me, the process involved a Figma plugin called \"Shumi Noise\", but it seemed like an easy CSS solution must exist. If you're interested in the original twitter thread, you can \u003Ca href=\"https://x.com/kubadesign/status/1883884665448325356\" rel=\"nofollow noreferrer\" target='_blank'>find it here\u003C/a>.\n\nBelow is a simple proof of concept for an overlay that applies the effect to an image or any element the class is applied to. Simple adjust the opacity or base frequency to produce the desired level of graininess. Coupled with some crisp photography, AI artwork, or other design, the effect can make for some pretty epic landing pages with little effort.\n\n\u003CNoiseOverlay image=\"/noise-css-cover.png\" className=\"w-full\" client:load />\n\n```css title=\"noise-overlay.css\" caption=\"Add this class to an element to apply noise\"\n.noise::before {\n  content: '';\n  position: absolute;\n  inset: 0;\n  background: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.75' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.3'/%3E%3C/svg%3E\");\n  pointer-events: none;\n}\n```\n\nThe effect generally looks best when applied to an entire hero section rather than just an image, and most designers pair it with a gradient effect to taper off the graininess towards the edges of the page. Its a clean way to soften up the bold colors and visual sharpness you usually get from AI image outputs in tools like Midjourney.","src/content/blog/how-to-add-noise-to-element-css/index.mdx",[143],"./noise-css-cover.webp","21a0f6761aab173d","the-correct-way-to-load-adsense-in-next-js",{"id":145,"data":147,"body":154,"filePath":155,"assetImports":156,"digest":158,"deferredRender":115},{"title":148,"description":149,"date":150,"image":151,"tags":152},"The Correct Way to Load Google AdSense in Next.js","You'll lose ad revenue unless you load AdSense in Next.js the right way.",["Date","2025-04-02T00:00:00.000Z"],"__ASTRO_IMAGE_./adsense-next.webp",[153,124],"nextjs","Adding Google Adsense to a Next.js site is fairly straightforward and simple. You can install \u003Ca href=\"https://github.com/scttcper/react-adsense\" rel=\"noreferrer nofollow\" target=\"_blank\">@ctrl/react-adsense\u003C/a>, use the component with your credentials, and add the Adsense script to `pages/_app.js` if you're using Page Router or `app/layout.tsx` for App Router.\n\nAt first glance, this might seem like all you need, but I found out the hard way that this basic implementation is not enough to get the job done. Read on if you're interested why, otherwise \u003Ca href=\"#the-solution\">skip to the solution\u003C/a>.\n\n```javascript title=\"pages/_app.tsx\" caption=\"Loading the script in Next with page router\"\nimport Script from 'next/script'\n\n// This part was ok ✅\nexport default function App({ Component, pageProps }) {\n  return (\n    \u003C>\n      \u003CScript\n        strategy=\"afterInteractive\"\n        src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-XXXXXXXXXXXX\"\n        crossOrigin=\"anonymous\"\n      />\n      \u003CComponent {...pageProps} />\n    \u003C/>\n  )\n}\n```\n\n```javascript title=\"AdBanner.tsx\" caption=\"Minimal react-adsense setup\"\nimport React from 'react'\nimport { Adsense } from '@ctrl/react-adsense'\n\n// This part was not ❌\nexport function AdBanner() {\n  return \u003CAdsense client=\"ca-pub-XXXXXXXXXXXXXXXX\" slot=\"XXXXXXXXXX\" />\n}\n```\n\n## The Problem\n\nAfter running this setup for about four months on a site averaging around 30,000 pageviews per month, I started noticing something odd. My daily ad revenue seemed unusually low, but I initially chalked it up to typical Adsense RPMs. It's well-known that Adsense doesn’t pay as well as some other ad networks, but given their low barrier to entry, I accepted it as part of the tradeoff.\n\nWhat didn’t add up was that my analytics dashboard was showing more than twice the pageviews reported by Google Adsense. It didn’t take long to realize that the root cause was likely related to how Next.js handles routing and rendering.\n\nNext.js is a single-page application (SPA) framework under the hood, even when using traditional routing patterns. This means that when users navigate between pages, the browser doesn’t fully reload the page, it simply swaps out content dynamically. While this is great for performance and user experience, it introduces a subtle problem: scripts like Google AdSense are designed to detect full page loads, not internal client-side navigations. As a result, while users were technically viewing multiple pages per session, AdSense wasn’t registering those views because it only initialized once on mount. Without a proper fix, every client-side page change was effectively invisible to the ad system.\n\nThe site I was working on, \u003Ca href=\"https://gig.fish\" rel=\"noreferrer\" target=\"_blank\">GigFish\u003C/a>, is a directory where users typically spend 5 minutes or more per session, browsing an average of 5 or more pages. Because my AdBanner component was only rendering once on a route like \u003Ca href=\"https://gig.fish/discover\" rel=\"noreferrer\" target=\"_blank\">the discover page\u003C/a>, I was missing out on several page views per user session.\n\nOn subsequent navigations, the ad banner kept displaying the same ad because the component never re-rendered.\n\n## The Solution\n\nTo fix the issue, I replaced the `@ctrl/react-adsense` component with my own implementation. It’s almost identical but adds a key based on the router path and a retry mechanism to ensure the ad banner is filled if the initial load fails.\n\n```javascript title=\"Adsense.tsx\" caption=\"Filling new ads when the route changes\"\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport { cn } from '@/lib/utils'\n\nexport function Adsense({\n  className = '',\n  style = { display: 'block' },\n  client,\n  slot,\n  layout = '',\n  layoutKey = '',\n  format = 'auto',\n  responsive = 'false',\n  pageLevelAds = false,\n  adTest,\n  children,\n  ...rest\n}) {\n  const router = useRouter()\n\n  useEffect(() => {\n    const p = {}\n    if (pageLevelAds) {\n      p.google_ad_client = client\n      p.enable_page_level_ads = true\n    }\n\n    // Fill the space with an ad\n    const doPush = () => {\n      if (typeof window !== 'object') return\n      window.adsbygoogle = window.adsbygoogle || []\n      window.adsbygoogle.push(p)\n    }\n\n    const pushAds = () => {\n      try {\n        doPush()\n      } catch {\n        // 👇 THIS IS A FAILSAFE\n        setTimeout(() => {\n          try {\n            doPush()\n          } catch (err) {\n            console.error('AdSense push retry failed:', err)\n          }\n        }, 750)\n      }\n    }\n\n    pushAds()\n  }, [router.asPath, client, slot, pageLevelAds])\n\n  return (\n    \u003Cins\n      key={router.asPath} // 👈 THIS IS THE IMPORTANT FIX\n      className={cn('adsbygoogle', className)}\n      style={style}\n      data-ad-client={client}\n      data-ad-slot={slot}\n      data-ad-layout={layout}\n      data-ad-layout-key={layoutKey}\n      data-ad-format={format}\n      data-full-width-responsive={responsive}\n      data-adtest={adTest}\n      {...rest}\n    >\n      {children}\n    \u003C/ins>\n  )\n}\n```\n\nThe `router.asPath` key signals to React that the component has changed and needs to be re-rendered. Inside the effect, logic attempts to populate the banner with a new ad. If the first attempt fails, which can happen due to the asynchronous loading of the Adsense script, it retries after 750ms. If, after all this, the ad still has the `data-ad-status=\"unfilled\"` attribute, it's likely because the Google Adsense script chose not to serve an ad.\n\nAfter making this change, my AdBanner component correctly re-rendered whenever the URL's query parameters changed, and I started seeing different ads when navigating between pages. As a result, the pageview count in my Adsense reports began to align much more closely with the numbers from my analytics dashboard. While it's still a bit early to be certain, my daily ad revenue now looks likely to double in the coming months. 🥳","src/content/blog/the-correct-way-to-load-adsense-in-next-js/index.mdx",[157],"./adsense-next.webp","902cf496dacc9be8","there-is-no-safe-path",{"id":159,"data":161,"body":167,"filePath":168,"assetImports":169,"digest":171,"deferredRender":115},{"title":162,"description":163,"date":164,"image":165,"tags":166},"There is No Safe Path","The old blueprint is useless, but it's the perfect time to build your own.",["Date","2025-01-21T00:00:00.000Z"],"__ASTRO_IMAGE_./paths.png",[108,125],"There has never been a better time to try and fail.\n\nWith the rise of AI-integrated IDEs, no-code solutions, free hosting platforms, and social media marketing channels, you’d be crazy not to take at least one big swing for the fences. Even more so given the trends currently playing out in tech.\n\nThe writing is on the wall for many professions. A degree from a prestigious university no longer guarantees a smooth transition into the professional world — it merely gets your foot in the door. The common path through professional life is well-paved but overcrowded. Worse, the cost of getting on that path has soared, with student debt, credential inflation, and unpaid internships becoming the norm, even as the promised security continues to erode. The blueprint that worked for your parents may not work for you, and almost certainly won’t be advice you’d pass on to your children ten or twenty years from now.\n\n_There is no safe career path_, only different kinds of risk.\n\nKnowledge workers are cheap. Office jobs of all kinds, from software engineers to executive assistants, are now open to the world. White-collar workers in the West aren’t just competing with their neighbors or classmates; they’re competing with the globe.\n\nWhy hire and train a few junior engineers fresh out of American universities when you can hire twice as many experienced Argentinian or Indian developers for the same price? Middle management might object, but to the VCs backing the company and the C-level executives in charge, the decision is a no-brainer.\n\nTo make matters worse for domestic workers, government policy shows no signs of slowing the trend. Despite hollow populist promises, President Trump and his inner circle of big tech oligarchs show every sign of maintaining or even expanding the current trajectory of America’s H-1B visa program. A program originally intended to fill specialty jobs that the American workforce could not meet, but one that is now routinely exploited.\n\n_There’s never been a better time to build._\n\nFrom hosting to security, from marketing to payment gateways, the tools are all laid out in front of you. Today, any teenager in their bedroom or disillusioned office worker can spin up a working prototype in a weekend. You don’t need a resume, a network, or anyone’s permission. All you need is an idea and the drive to ship it. Your vision could be online tomorrow. The cost of failure is little more than your time, especially when a domain costs less than a meal from DoorDash.\n\nFailure isn’t just expected, it’s the price you pay for trying something worth doing. Better to fail on your own terms than to wait around for the next round of layoffs.\n\nThe tools are cheap, the stakes are low, and the upside is limitless. Build your own dream or someone else will happily put you to work building theirs.","src/content/blog/there-is-no-safe-path/index.mdx",[170],"./paths.png","d7df369d2f504904"]